// Spring Boot Sub Project Common Dependencies

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


def dependencyList = [
        [group: "com.problemfighter.java.oc", name: "pf-java-object-copier", version: "$pfJavaObjectCopier"],
        [group: "com.problemfighter.pfspring.common", name: "pfspring-common", version: "$pfSpringCommon"],
        [group: "com.problemfighter.pfspring.restapi", name: "pfspring-rest-api", version: "$pfSpringRestApi"],
        [group: "com.problemfighter.pfspring.multitenant", name: "pfspring-multi-tenant", version: "$pfSpringMultiTenant"],
        // [group: "com.problemfighter.pfspring.security", name: "pfspring-security", version: "$pfSpringSecurity"], // Optional
       //  [group: "com.problemfighter.pfspring.jwt", name: "pfspring-jwt", version: "$pfSpringJwt"], // Optional
       //  [group: "com.problemfighter.pfspring.identity", name: "pfspring-identity", version: "$pfSpringIdentity"], // Optional
]

dependencies {
    dependencyList.each {
        if (isSourceDevelopment.equals("true")) {
            if (findProject(":" + it.name)) {
                implementation project(":" + it.name)
            }
        }else{
            implementation "${it.group}:${it.name}:${it.version}"
        }
    }


    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "io.springfox:springfox-swagger2:$springfox"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}