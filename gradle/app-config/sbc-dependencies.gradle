// Spring Boot Sub Project Common Dependencies

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


Boolean isItFrameworkDependency(String name) {
    String projectRoot = rootProject.projectDir
    List projectRoots = [dependencySource]
    for (String projectRootName : projectRoots) {
        File rootPath = new File(projectRoot, projectRootName)
        List modules = ["module", "library"]
        for (String moduleName : modules) {
            File subsectionDirectory = new File(rootPath, moduleName)
            if (subsectionDirectory.exists()) {
                if (subsectionDirectory.list().contains(name)) {
                    return true
                }

            }
        }
    }
    return false
}

def dependencyList = [
        [group: "com.problemfighter.java.oc", name: "pf-java-object-copier", version: "1.0.0"],
        [group: "com.problemfighter.pfspring.common", name: "pfspring-common", version: "1.0.0"],
        [group: "com.problemfighter.pfspring.restapi", name: "pfspring-rest-api", version: "1.0.0"],
]

dependencies {

    if (!isItFrameworkDependency(project.name)) {
        if (isSourceDevelopment.equals("true")) {
            dependencyList.each {
                if (findProject(":" + it.name)) {
                    implementation project(":" + it.name)
                }
            }
        } else {
            dependencyList.each {
                implementation "${it.group}:${it.name}:${it.version}"
            }
        }
    }

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "io.springfox:springfox-boot-starter:$springfox"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}